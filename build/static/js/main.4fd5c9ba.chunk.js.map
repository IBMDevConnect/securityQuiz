{"version":3,"sources":["components/Questionaire.js","components/login.js","App.js","index.js"],"names":["Questionaire","showAnswers","handleAnswer","current","total","handleNextQuestion","quizTitle","showTips","data","question","correct_answer","answers","tip","className","dangerouslySetInnerHTML","__html","map","answer","bgColor","textColor","onClick","Login","handleSubmit","loading","emailExists","useState","name","setName","email","setEmail","availablecategories","setAvailableCategories","category","setCategory","userPick","setUserPick","setQuizTitle","setAnswers","setShowTips","validEmail","setValidEmail","error","setError","useLayoutEffect","fetch","then","res","json","categories","catch","e","type","value","onChange","target","id","placeholder","objName","toLowerCase","validator","isEmail","handleEmailChange","cat","disabled","App","questions","setQuestions","currentIndex","setCurrentIndex","score","setScore","setShowAnswers","auth","setAuth","setLoading","setEmailExists","url","useEffect","API_URL","results","incorrect_answers","sort","Math","random","handleStart","a","method","headers","body","JSON","stringify","rawResponse","content","result","length","width","window","innerWidth","height","innerHeight","recycle","submit","timestamp","Date","now","time","Intl","DateTimeFormat","year","month","day","hour","minute","second","format","requestOptions","submitResults","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4fd5c9ba.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Questionaire = ({\n  showAnswers,\n  handleAnswer,\n  current,\n  total,\n  handleNextQuestion,\n  quizTitle,\n  showTips,\n  data: { question, correct_answer, answers, tip },\n}) => {\n  return (\n    <div className=\"flex flex-col\">\n      <div className=\"text-5xl font-black self-center p-5\">\n        <h1>{quizTitle}</h1>\n      </div>\n      <div className=\"mb-2\">\n        <h1 className=\"font-semibold\">\n          {current + 1}/{total}\n        </h1>\n      </div>\n\n      <div className=\"bg-white text-purple-800 p-10 rounded-lg shadow-md\">\n        <h2\n          className=\"text-2xl\"\n          dangerouslySetInnerHTML={{ __html: question }}\n        />\n      </div>\n      <div className=\"grid grid-cols-2 gap-6 mt-6 \">\n        {answers.map((answer) => {\n          const bgColor = showAnswers\n            ? answer === correct_answer\n              ? \"bg-green-500\"\n              : \"bg-red-500\"\n            : \"bg-white\";\n          const textColor = showAnswers ? \"text-white\" : \"text-purple-800\";\n          return (\n            <button\n              key={answer}\n              className={` p-4 ${textColor} rounded shadow font-semibold ${bgColor}`}\n              dangerouslySetInnerHTML={{ __html: answer }}\n              onClick={() => handleAnswer(answer)}\n            ></button>\n          );\n        })}\n      </div>\n      <button\n        className={`ml-auto mt-6 bg-purple-700 text-white p-4 font-semibold rounded shadow ${\n          showAnswers ? \"visible\" : \"invisible\"\n        }`}\n        onClick={handleNextQuestion}\n      >\n        Next Question\n      </button>\n      {showTips && (\n        <div className=\"font-light self-center p-4\">{`Tip: ${tip}`}</div>\n      )}\n    </div>\n  );\n};\n\nexport default Questionaire;\n","import React, { useState, useLayoutEffect } from \"react\";\nimport validator from \"validator\";\n\nconst Login = ({ handleSubmit, loading, emailExists }) => {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [availablecategories, setAvailableCategories] = useState(\"\");\n  const [category, setCategory] = useState(\"Datascience\");\n  const [userPick, setUserPick] = useState();\n  const [quizTitle, setQuizTitle] = useState();\n  const [answers, setAnswers] = useState();\n  const [showTips, setShowTips] = useState();\n  const [validEmail, setValidEmail] = useState(false);\n  const [error, setError] = useState();\n  const url =\n    \"https://quizappservercybersecurity-responsive-bandicoot.mybluemix.net\";\n  useLayoutEffect(() => {\n    fetch(`${url}api/getconf`)\n      .then((res) => res.json())\n      .then((data) => {\n        setAvailableCategories(data.categories);\n        setUserPick(data.userPick);\n        setQuizTitle(data.quizTitle);\n        setAnswers(data.showAnswers);\n        setShowTips(data.showTips);\n      })\n      .catch((e) => {\n        setError(\n          \"Unable to get config, refresh page or report this issue back to us\"\n        );\n      });\n  }, []);\n  useLayoutEffect(() => {\n    setEmail(\"\");\n    setValidEmail(false);\n  }, [emailExists]);\n\n  const handleEmailChange = (e, objName) => {\n    objName(e.target.value.toLowerCase());\n    if (validator.isEmail(email)) {\n      setValidEmail(true);\n    }\n  };\n\n  return (\n    <div className=\"bg-black text-purple-800 p-10 lg:p-40 rounded-lg shadow-md bg-opacity-20 flex flex-row place-items-center\">\n      <div className=\"space-y-5\">\n        <div className=\"text-3xl font-sans text-white self-center p-5\">\n          {quizTitle}\n        </div>\n        <div>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            id=\"uname\"\n            className=\"rounded text-black px-14 py-2 placeholder-gray-400 shadow-md\"\n            placeholder=\"Name\"\n          />\n        </div>\n        <div>\n          <input\n            key={`email${emailExists}`}\n            type=\"email\"\n            value={email}\n            onChange={(e) => handleEmailChange(e, setEmail)}\n            id=\"email\"\n            className=\"rounded text-black px-14 py-2 placeholder-gray-400 shadow-md\"\n            placeholder=\"Company Email\"\n          />\n        </div>\n        <div>\n          {availablecategories && userPick && (\n            <select\n              className=\"rounded text-black px-20 py-2 placeholder-gray-400 shadow-md\"\n              value={category}\n              onChange={(e) => {\n                setCategory(e.target.value);\n              }}\n            >\n              {availablecategories.map((cat) => {\n                return (\n                  <option key={cat} value={cat}>\n                    {cat}\n                  </option>\n                );\n              })}\n            </select>\n          )}\n        </div>\n        <div className=\"flex flex-row place-items-center\">\n          <button\n            key={`start${email}`}\n            className={` p-3 px-14 font-semibold rounded shadow ${\n              !validEmail\n                ? \"bg-purple-400 text-white cursor-not-allowed\"\n                : \"bg-purple-700 text-gray-100 \"\n            }`}\n            disabled={!validEmail}\n            onClick={() =>\n              handleSubmit(name, email, category, answers, showTips, quizTitle)\n            }\n          >\n            START\n          </button>\n        </div>\n        {loading && (\n          <div className=\"font-light self-center p-2 text-white\">\n            <p>Verifying your email</p>\n          </div>\n        )}\n        {emailExists && !validEmail && (\n          <div\n            className=\"font-medium self-center p-2 text-white\"\n            key={`email${emailExists}${email}`}\n          >\n            <p>\n              Looks like your email already exists,\n              <br />\n              you cannot retake this quiz\n              <br />\n            </p>\n          </div>\n        )}\n        <div className=\"text-red-400\">\n          <p>{error}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Login;\n","import React, { useState, useEffect } from \"react\";\nimport Questionaire from \"./components/Questionaire\";\nimport Login from \"./components/login\";\nimport Confetti from \"react-confetti\";\n\nfunction App() {\n  const [questions, setQuestions] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [showAnswers, setShowAnswers] = useState(false);\n  const [answers, setAnswers] = useState();\n  const [showTips, setShowTips] = useState();\n  const [quizTitle, setQuizTitle] = useState();\n  const [category, setCategory] = useState(\"Datascience\");\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [auth, setAuth] = useState(false);\n  const [loading, setLoading] = useState();\n  const [emailExists, setEmailExists] = useState();\n  const [error, setError] = useState();\n  const url =\n    \"https://quizappservercybersecurity-responsive-bandicoot.mybluemix.net\";\n\n  useEffect(() => {\n    const API_URL = `${url}api/questions/${category}`;\n    fetch(API_URL)\n      .then((res) => res.json())\n      .then((data) => {\n        const questions = data.results.map((question) => ({\n          ...question,\n          answers: [\n            question.correct_answer,\n            ...question.incorrect_answers,\n          ].sort(() => Math.random() - 0.5),\n        }));\n        setQuestions(questions);\n        setCurrentIndex(0);\n      });\n  }, [category]);\n\n  const handleAnswer = (answer) => {\n    if (!showAnswers) {\n      if (answer === questions[currentIndex].correct_answer) {\n        setScore(score + 1);\n      }\n    }\n    answers ? setShowAnswers(true) : handleNextQuestion();\n    // setCurrentIndex(currentIndex + 1);\n  };\n  const handleNextQuestion = () => {\n    setShowAnswers(false);\n    setCurrentIndex(currentIndex + 1);\n  };\n  const handleStart = async (\n    name,\n    email,\n    category,\n    answers,\n    showTips,\n    quizTitle\n  ) => {\n    setLoading(true);\n\n    const rawResponse = await fetch(`${url}api/checkemail`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({ email, category }),\n    });\n    const content = await rawResponse;\n    const json = await content.json();\n\n    setAuth(!json.result);\n    setEmailExists(json.result);\n    setLoading(false);\n    setName(name);\n    setEmail(email);\n    setCategory(category);\n    setAnswers(answers);\n    setShowTips(showTips);\n    setQuizTitle(quizTitle);\n  };\n  const submitResults = (submit) => {\n    if (submit) {\n      const timestamp = Date.now();\n\n      var time = new Intl.DateTimeFormat(\"en-US\", {\n        year: \"numeric\",\n        month: \"2-digit\",\n        day: \"2-digit\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        second: \"2-digit\",\n      }).format(timestamp);\n\n      const requestOptions = {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          name,\n          email,\n          score,\n          category,\n          time,\n        }),\n      };\n      fetch(`${url}api/postresults`, requestOptions).catch((e) => {\n        setError(\"there was an error while posting your score,please retry\");\n      });\n      // .then((res) => res.json())\n      // .then((data) => console.log(data));\n    }\n  };\n\n  if (auth) {\n    if (questions.length > 5) {\n      if (currentIndex >= questions.length) {\n        return (\n          <div>\n            {score >= 7 ? (\n              <Confetti\n                width={window.innerWidth}\n                height={window.innerHeight}\n                recycle={false}\n              />\n            ) : (\n              \"\"\n            )}\n            <h1 className=\"text-3xl text-white font-bold\">\n              {name}, Your score was {score} !\n            </h1>\n            {submitResults(true)}\n            {error && <p className=\"text-red-400\">{error}</p>}\n          </div>\n        );\n      } else {\n        return (\n          <div className=\"container p-2 mt-0.1\">\n            <Questionaire\n              current={currentIndex}\n              total={questions.length}\n              data={questions[currentIndex]}\n              showAnswers={showAnswers}\n              handleAnswer={handleAnswer}\n              handleNextQuestion={handleNextQuestion}\n              quizTitle={quizTitle}\n              showTips={showTips}\n            />\n          </div>\n        );\n      }\n    } else {\n      return <p className=\"font-semibold\">Loading Questions..</p>;\n    }\n  } else {\n    return (\n      <div>\n        <Login\n          handleSubmit={handleStart}\n          loading={loading}\n          emailExists={emailExists}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}